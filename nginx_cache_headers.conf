# Nginx缓存头配置
# 添加到nginx.conf的server块中

# 添加缓存状态头
add_header X-Cache-Status $upstream_cache_status;
add_header X-Cache-Hit $upstream_cache_status;

# 动态内容缓存控制
location /api/ {
    # 添加缓存状态头
    add_header X-Cache-Status $upstream_cache_status;
    add_header X-Cache-Hit $upstream_cache_status;
    
    # API缓存策略
    proxy_cache_valid 200 1m;
    proxy_cache_valid 404 1m;
    proxy_cache_valid 500 1m;
    
    # 缓存键
    proxy_cache_key "$scheme$request_method$host$request_uri$is_args$args";
    
    # 缓存控制头
    add_header Cache-Control "public, max-age=60";
    add_header X-Response-Time $upstream_response_time;
    
    proxy_pass http://localhost:3000;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_cache_bypass $http_upgrade;
}

# 静态文件缓存控制
location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
    # 添加缓存状态头
    add_header X-Cache-Status "STATIC";
    add_header X-Cache-Hit "STATIC";
    
    # 长期缓存
    expires 1y;
    add_header Cache-Control "public, immutable";
    add_header X-Response-Time "0";
    
    root /root/小柴日记项目/front-end;
    try_files $uri $uri/ @nodejs;
}

# HTML文件缓存控制
location ~* \.html$ {
    # 添加缓存状态头
    add_header X-Cache-Status "HTML";
    add_header X-Cache-Hit "HTML";
    
    # 短期缓存
    expires 1h;
    add_header Cache-Control "public, max-age=3600";
    add_header X-Response-Time $upstream_response_time;
    
    proxy_pass http://localhost:3000;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_cache_bypass $http_upgrade;
} 